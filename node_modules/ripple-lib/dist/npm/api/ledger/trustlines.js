
'use strict';
var _ = require('lodash');
var utils = require('./utils');
var validate = utils.common.validate;
var parseAccountTrustline = require('./parse/account-trustline');

function currencyFilter(currency, trustline) {
  return currency === null || trustline.specification.currency === currency;
}

function getAccountLines(remote, address, ledgerVersion, options, marker, limit, callback) {
  var requestOptions = {
    account: address,
    ledger: ledgerVersion,
    marker: marker,
    limit: utils.clamp(limit, 10, 400),
    peer: options.counterparty
  };

  remote.requestAccountLines(requestOptions, function (error, data) {
    return error ? callback(error) : callback(null, {
      marker: data.marker,
      results: data.lines.map(parseAccountTrustline).filter(_.partial(currencyFilter, options.currency || null))
    });
  });
}

function getTrustlines(account, options, callback) {
  validate.address(account);
  validate.getTrustlinesOptions(options);

  var ledgerVersion = options.ledgerVersion || this.remote.getLedgerSequence();
  var getter = _.partial(getAccountLines, this.remote, account, ledgerVersion, options);
  utils.getRecursive(getter, options.limit, callback);
}

module.exports = utils.wrapCatch(getTrustlines);